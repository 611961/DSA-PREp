#include <iostream>
#include <vector>
using namespace std;

void heapify(vector<int>& heap, int n, int i) {
    int largest = i;
    int l = 2 * i + 1;
    int r = 2 * i + 2;

    if (l < n && heap[l] > heap[largest]) {
        largest = l;
    }
    if (r < n && heap[r] > heap[largest]) {
        largest = r;
    }
    if (largest != i) {
        swap(heap[i], heap[largest]);
        heapify(heap, n, largest);
    }
}

void heapsort(vector<int>& heap, int n) {
    for (int i = n / 2 - 1; i >= 0; i--) {
        heapify(heap, n, i);
    }

    for (int i = n - 1; i > 0; i--) {
        swap(heap[0], heap[i]);
        heapify(heap, i, 0);
    }
}

int main(){
    vector<int> heap = {34, 20, 6, 16, 10, 50};
    int n = heap.size();
    
    heapsort(heap, n);
    
    cout << "Heap after heapsort process: ";
    for(int i = 0; i < n; i++) {
        cout << heap[i] << " ";
    }
    
    return 0;
}
